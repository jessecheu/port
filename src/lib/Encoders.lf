/**
 * @brief Library reactors for the encoders on the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * The output is the angle in degrees seen by the encoder.
 * The angle increases or decreases as the motors move forward or backward.
 * Eventually, you will get overflow and the angles will wrap around.
 * The angles increase as the wheels rotate forward.
 * @author Abhi Gundrala
 * @author Edward A. Lee
 */
target C {
  platform: {
    name: "rp2040",
    board: "pololu_3pi_2040_robot"
  },
  threading: false,
}

preamble {=
  #include <math.h> 
  #include <hardware/pio.h>
  #include <quadrature_encoder.pio.h>

  // pin defines
  #define RIGHT_ENCODER_AB 8
  #define LEFT_ENCODER_AB 12
  #define RIGHT_SM 0
  #define LEFT_SM 1
=}

reactor Encoders {
  input trigger:bool
  output right:int32_t; 
  output left:int32_t;
  reaction(startup) {=
    PIO pio = pio0;
    pio_add_program(pio, &quadrature_encoder_program);
    quadrature_encoder_program_init(pio, RIGHT_SM, RIGHT_ENCODER_AB, 0);
    quadrature_encoder_program_init(pio, LEFT_SM, LEFT_ENCODER_AB, 0);
  =}
  reaction(trigger) -> left, right {=
    // Also, the sign is reversed, where reverse increases, so we negate.
    int32_t rcount = -quadrature_encoder_get_count(pio0, RIGHT_SM);
    int32_t lcount = -quadrature_encoder_get_count(pio0, LEFT_SM);
    lf_set(right, rcount);
    lf_set(left, lcount);
  =}
}
