/**
  * UART 
  * Source: https://github.com/raspberrypi/pico-examples/blob/master/uart/hello_uart/hello_uart.c
  * //https://www.raspberrypi.com/documentation/pico-sdk/hardware.html#uart_example 
  * //https://github.com/raspberrypi/pico-examples/blob/master/uart/uart_advanced/uart_advanced.c 
 */
 target C {
  platform: {
    name: "rp2040",
    board: "pololu_3pi_2040_robot"
  },
  threading: false,
}
import Buttons from "../lib/Buttons.lf"
preamble {=
  //..
=}

main reactor {
  preamble {=
    #include <stdio.h>
    #include "pico/stdlib.h"
    #include "hardware/uart.h"
    #include "hardware/irq.h"


    /// \tag::hello_uart[]

    #define UART_ID uart0
    #define BAUD_RATE 115200

    // We are using pins 0 and 1, but see the GPIO function select table in the
    // datasheet for information on which other pins can be used.
    #define UART_TX_PIN 28
    #define UART_RX_PIN 29

    #define DATA_BITS 8
    #define STOP_BITS 1
    #define PARITY    UART_PARITY_NONE

    static int chars_rxed = 0;

    // RX interrupt handler
    void on_uart_rx() {
        while (uart_is_readable(UART_ID)) {
            uint8_t ch = uart_getc(UART_ID);
            // Can we send it back?
            if (uart_is_writable(UART_ID)) {
                // Change it slightly first!
                ch++;
                uart_putc(UART_ID, ch);
            }
            chars_rxed++;
        }
        while(uart_is_readable(UART_ID)) {
        uint8_t ch = uart_getc(UART_ID);
        if (ch == 'C') {
          self->temp_driving_forward_timer = 10; //timer to make sure it doesnt stop again due to the gray line
          lf_set(motor.left_power, 0.1f);
          lf_set(motor.right_power, 0.1f);
          lf_set_mode(DRIVE_MODE);
        }
      }
    =}

  reaction(buttons.button_a) {=
   if(buttons.button_a->value) {
    printf("Sending data over the UART.\n");
    uart_putc_raw(UART_ID, 'L');
   }
    
  =}
}



